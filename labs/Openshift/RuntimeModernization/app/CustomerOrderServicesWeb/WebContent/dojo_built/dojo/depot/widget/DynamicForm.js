/*
	Copyright (c) 2004-2010, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


if(!dojo._hasResource["depot.widget.DynamicForm"]){dojo._hasResource["depot.widget.DynamicForm"]=true;dojo.provide("depot.widget.DynamicForm");dojo.require("dojox.dtl._Templated");dojo.require("dijit.form.Form");dojo.require("dijit.form.TextBox");dojo.require("dijit.form.ValidationTextBox");dojo.require("dijit.form.Textarea");dojo.require("dojox.form.BusyButton");dojo.require("dojox.dtl");dojo.require("dojox.dtl.Context");dojo.require("dijit.form.NumberSpinner");dojo.declare("depot.widget.DynamicForm",[dijit._Widget,dojox.dtl._Templated],{widgetsInTemplate:true,refreshTopic:"",updateTopic:"formUpdate",metaUrl:"",updateUrl:"",typeForm:"",group:"",dynaRoot:"",templateString:"<div dojoAttachPoint=\"dynaRoot\">\n<div dojoType=\"dijit.TitlePane\" dojoAttachPoint=\"typeFormTile\">\n<div dojoType=\"dijit.form.Form\" dojoAttachPoint=\"typeForm\">\n{% for groupForm in group.formData %}\n            <div class=\"formField\">\n                <div class=\"formHeader\"><label>{{groupForm.label}}</label></div>\n                <div class=\"formValue\">\n               \t\n               {% ifequal groupForm.type \"string\" %}\n                <div dojoType=\"dijit.form.ValidationTextBox\" trim=true name=\"{{groupForm.name}}\" \n               {% if groupForm.required %} required=\"{{groupForm.required}}\" {% endif %}\n               {% if groupForm.promptMessage %} promptMessage=\"{{groupForm.promptMessage}}\" {% endif %}\n               {% if groupForm.regExp %} regExp=\"{{groupForm.regExp}}\" {% endif %}\n\t\t\t   {% if groupForm.invalidMessage %}invalidMessage=\"{{groupForm.invalidMessage}}\"{% endif %}\n\t\t\t   {% if groupForm.readonly %}readonly=\"{{groupForm.readonly}}\"{% endif %}\n\t\t\t\tdojoAttachEvent=\"onkeyup:isValid\"\n\t\t\t\t>\n\t\t\t\t\n\t\t\t\t</div>\n                \n\t\t\t\t{% endifequal %}\n\t\t\t\t {% ifequal groupForm.type \"number\" %}\n                <div dojoType=\"dijit.form.NumberSpinner\" name=\"{{groupForm.name}}\" \n               {% if groupForm.required %} required=\"{{groupForm.required}}\" {% endif %}\n               {% if groupForm.promptMessage %} promptMessage=\"{{groupForm.promptMessage}}\" {% endif %}\n               {% if groupForm.regExp %} regExp=\"{{groupForm.regExp}}\" {% endif %}\n\t\t\t   {% if groupForm.invalidMessage %}invalidMessage=\"{{groupForm.invalidMessage}}\"{% endif %}\n\t\t\t   {% if groupForm.readonly %}readonly=\"{{groupForm.readonly}}\"{% endif %}\n\t\t\t   {% if groupForm.constraints %}constraints=\"{{groupForm.constraints}}\"{% endif %}\n\t\t\t   smallDelta=\"1\" intermediateChanges=\"true\" dojoAttachEvent=\"onChange:isValid\"\n\t\t\t\t>\n\t\t\t\t</div>\n                \n\t\t\t\t{% endifequal %}\n\t\t\t\t\n\t\t\t\t{% ifequal groupForm.type \"text\" %}\n                <div dojoType=\"dijit.form.Textarea\" name=\"{{groupForm.name}}\" \n               {% if groupForm.required %} required=\"{{groupForm.required}}\" {% endif %}\n               {% if groupForm.promptMessage %} promptMessage=\"{{groupForm.promptMessage}}\" {% endif %}\n\t\t\t   {% if groupForm.invalidMessage %}invalidMessage=\"{{groupForm.invalidMessage}}\"{% endif %}\n\t\t\t   {% if groupForm.readonly %}readonly=\"{{groupForm.readonly}}\"{% endif %}\n\t\t\t   dojoAttachEvent=\"onkeyup:isValid\"\n\t\t\t\t>\n\t\t\t\t\n\t\t\t\t</div>\n                \n\t\t\t\t{% endifequal %}\n        \n                </div>\n                <div class=\"clear\">\n                </div>\n            </div>\n{% endfor %}\n <div class=\"formField\">\n \t<button dojoType=\"dojox.form.BusyButton\" busyLabel=\"Updating {{group.label}}...\" dojoAttachPoint=\"updateTypeButton\" dojoAttachEvent=\"onClick:updateForm\" disabled>Update {{group.label}}</button>\n\t<div dojoAttachPoint=\"resultType\"></div>\n </div>\n </div>\n </div>\n </div>\n",typeFormTile:"",updateTypeButton:"",formData:"",extraData:"",resultType:"",postMixInProperties:function(){if(this.formData){this.formData=eval(this.formData);}dojo.subscribe(this.refreshTopic,this,this.populateForm);this.inherited(arguments);},startup:function(){var _1={url:this.metaUrl,handleAs:"json",load:dojo.hitch(this,this.setMeta),error:dojo.hitch(this,this.loadMetaError)};dojo.xhrGet(_1);this.inherited(arguments);},setMeta:function(_2){this.group=_2;this.render();this.typeFormTile.set("title",_2.label);if(this.formData){this.typeForm.set("value",this.formData);}},loadMetaError:function(_3){console.error(_3);},populateForm:function(_4){console.debug("Populating form data called",_4);if(_4){this.formData=_4;this.typeForm.set("value",_4);console.debug("Populated Form",_4);}},updateForm:function(){this.updateTypeButton.makeBusy();console.debug("Updating",this.extraData);data=dojo.mixin(eval(this.extraData),this.typeForm.get("value"));var _5={url:this.updateUrl,headers:{"Content-Type":"application/json"},postData:dojo.toJson(data),load:dojo.hitch(this,this.updateFormSuccess),error:dojo.hitch(this,this.updateFormError)};dojo.xhrPost(_5);},updateFormSuccess:function(_6){this.updateTypeButton.cancel();dojo.place("<div class='successMessage'>Update Succesful</div>",this.resultType,"only");dojo.publish(this.updateTopic,[this.typeForm.get("value")]);},updateFormError:function(_7){console.error(_7);this.updateTypeButton.cancel();dojo.place("<div class='errorMessage'>Update Failed</div>",this.resultType,"only");},isValid:function(){console.debug("isValid");if(this.typeForm.isValid()){this.updateTypeButton.set("disabled",false);return true;}else{this.updateTypeButton.set("disabled",true);return false;}}});}